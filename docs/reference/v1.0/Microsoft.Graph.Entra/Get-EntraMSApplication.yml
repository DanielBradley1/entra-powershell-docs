### YamlMime:PowershellCmdlet
summary: |-
  Retrieves the list of applications within the organization.
module: Microsoft.Graph.Entra
notes: ""
inputs:
- name: <xref href="Bool?" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Int?" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Open.MSGraph.Model.MsApplication" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-EntraMSApplication
  href: New-EntraMSApplication.yml
- text: Remove-EntraMSApplication
  href: Remove-EntraMSApplication.yml
- text: Set-EntraMSApplication
  href: Set-EntraMSApplication.yml
syntaxes:
- >-
  Get-EntraMSApplication 
   [-Filter <String>] 
   [-All] 
   [-Top <Int32>] 
   [<CommonParameters>]
- >-
  Get-EntraMSApplication 
   [-SearchString <String>] 
   [-All] 
   [<CommonParameters>]
- >-
  Get-EntraMSApplication 
   -ObjectId <String> 
   [-All] 
   [<CommonParameters>]
examples:
- title: 'Example 1: Get an application by display name'
  code: |-
    PS C:\>Get-EntraMSApplication -Filter "DisplayName eq 'My App'"

    Id                        : ba4a97a7-3815-4752-bf4c-f1c0cccfff6a
    OdataType                 :
    Api                       : class ApiApplication {
                                    AcceptMappedClaims:
                                    KnownClientApplications:
                                    PreAuthorizedApplications:
                                    RequestedAccessTokenVersion: 2
                                    Oauth2PermissionScopes:
                                    System.Collections.Generic.List`1[Microsoft.Open.MSGraph.Model.PermissionScope]
                                }

    AppId                     : 807dd73f-8451-4cfa-b3bc-52ac3fd95330
    AppRoles                  : {}
    IsDeviceOnlyAuthSupported :
    IsFallbackPublicClient    :
    IdentifierUris            : {}
    DeletedDateTime           :
    DisplayName               : My App
    Info                      : class InformationalUrl {
                                    TermsOfServiceUrl:
                                    MarketingUrl:
                                    PrivacyStatementUrl:
                                    SupportUrl:
                                    LogoUrl:
                                }

    KeyCredentials            : {}
    OptionalClaims            :
    ParentalControlSettings   : class ParentalControlSettings {
                                    CountriesBlockedForMinors: System.Collections.Generic.List`1[System.String]
                                    LegalAgeGroupRule: Allow
                                }

    PasswordCredentials       : {}
    PublicClientApplication   :
    RequiredResourceAccess    : {}
    SignInAudience            : AzureADandPersonalMicrosoftAccount
    Tags                      : {}
    TokenEncryptionKeyId      :
    Web                       : class WebApplication {
                                    LogoutUrl:
                                    Oauth2AllowImplicitFlow:
                                    RedirectUris: System.Collections.Generic.List`1[System.String]
                                    ImplicitGrantSettings: class ImplicitGrantSettings {
                                        EnableIdTokenIssuance: False
                                        EnableAccessTokenIssuance: False
                                    }
                                }
  description: |-
    This command gets an application by its display name.
  summary: ""
- title: 'Example 2: Get an application by ID'
  code: |-
    PS C:\>Get-EntraMSApplication -Filter "AppId eq '807dd73f-8451-4cfa-b3bc-52ac3fd95330'"

    Id                        : ba4a97a7-3815-4752-bf4c-f1c0cccfff6a
    OdataType                 :
    Api                       : class ApiApplication {
                                    AcceptMappedClaims:
                                    KnownClientApplications:
                                    PreAuthorizedApplications:
                                    RequestedAccessTokenVersion: 2
                                    Oauth2PermissionScopes:
                                    System.Collections.Generic.List`1[Microsoft.Open.MSGraph.Model.PermissionScope]
                                }

    AppId                     : 807dd73f-8451-4cfa-b3bc-52ac3fd95330
    AppRoles                  : {}
    IsDeviceOnlyAuthSupported :
    IsFallbackPublicClient    :
    IdentifierUris            : {}
    DeletedDateTime           :
    DisplayName               : My App
    Info                      : class InformationalUrl {
                                    TermsOfServiceUrl:
                                    MarketingUrl:
                                    PrivacyStatementUrl:
                                    SupportUrl:
                                    LogoUrl:
                                }

    KeyCredentials            : {}
    OptionalClaims            :
    ParentalControlSettings   : class ParentalControlSettings {
                                    CountriesBlockedForMinors: System.Collections.Generic.List`1[System.String]
                                    LegalAgeGroupRule: Allow
                                }

    PasswordCredentials       : {}
    PublicClientApplication   :
    RequiredResourceAccess    : {}
    SignInAudience            : AzureADandPersonalMicrosoftAccount
    Tags                      : {}
    TokenEncryptionKeyId      :
    Web                       : class WebApplication {
                                    LogoutUrl:
                                    Oauth2AllowImplicitFlow:
                                    RedirectUris: System.Collections.Generic.List`1[System.String]
                                    ImplicitGrantSettings: class ImplicitGrantSettings {
                                        EnableIdTokenIssuance: False
                                        EnableAccessTokenIssuance: False
                                    }
                                }
  description: |-
    This command gets an application by its ID.
  summary: ""
- title: 'Example 3: Retrieve an application by identifierUris'
  code: |-
    Get-EntraMSApplication -Filter "identifierUris/any(uri:uri eq 'https://wingtips.wingtiptoysonline.com')"

    Id                        : ba4a97a7-3815-4752-bf4c-f1c0cccfff6a
    OdataType                 :
    Api                       : class ApiApplication {
                                    AcceptMappedClaims:
                                    KnownClientApplications:
                                    PreAuthorizedApplications:
                                    RequestedAccessTokenVersion: 2
                                    Oauth2PermissionScopes:
                                    System.Collections.Generic.List`1[Microsoft.Open.MSGraph.Model.PermissionScope]
                                }

    AppId                     : 807dd73f-8451-4cfa-b3bc-52ac3fd95330
    AppRoles                  : {}
    IsDeviceOnlyAuthSupported :
    IsFallbackPublicClient    :
    IdentifierUris            : {
                                    https://wingtips.wingtiptoysonline.com
                                }
    DeletedDateTime           :
    DisplayName               : My App
    Info                      : class InformationalUrl {
                                    TermsOfServiceUrl:
                                    MarketingUrl:
                                    PrivacyStatementUrl:
                                    SupportUrl:
                                    LogoUrl:
                                }

    KeyCredentials            : {}
    OptionalClaims            :
    ParentalControlSettings   : class ParentalControlSettings {
                                    CountriesBlockedForMinors: System.Collections.Generic.List`1[System.String]
                                    LegalAgeGroupRule: Allow
                                }

    PasswordCredentials       : {}
    PublicClientApplication   :
    RequiredResourceAccess    : {}
    SignInAudience            : AzureADandPersonalMicrosoftAccount
    Tags                      : {}
    TokenEncryptionKeyId      :
    Web                       : class WebApplication {
                                    LogoutUrl:
                                    Oauth2AllowImplicitFlow:
                                    RedirectUris: System.Collections.Generic.List`1[System.String]
                                    ImplicitGrantSettings: class ImplicitGrantSettings {
                                        EnableIdTokenIssuance: False
                                        EnableAccessTokenIssuance: False
                                    }
                                }
  description: |-
    This command gets an application by its IdentifierUris.
  summary: ""
- title: 'Example 4: Get an application by object ID'
  code: |-
    PS C:\>Get-EntraMSApplication -ObjectId ba4a97a7-3815-4752-bf4c-f1c0cccfff6a

    Id                        : ba4a97a7-3815-4752-bf4c-f1c0cccfff6a
    OdataType                 :
    Api                       : class ApiApplication {
                                    AcceptMappedClaims:
                                    KnownClientApplications:
                                    PreAuthorizedApplications:
                                    RequestedAccessTokenVersion: 2
                                    Oauth2PermissionScopes:
                                    System.Collections.Generic.List`1[Microsoft.Open.MSGraph.Model.PermissionScope]
                                }

    AppId                     : 807dd73f-8451-4cfa-b3bc-52ac3fd95330
    AppRoles                  : {}
    IsDeviceOnlyAuthSupported :
    IsFallbackPublicClient    :
    IdentifierUris            : {}
    DeletedDateTime           :
    DisplayName               : My App
    Info                      : class InformationalUrl {
                                    TermsOfServiceUrl:
                                    MarketingUrl:
                                    PrivacyStatementUrl:
                                    SupportUrl:
                                    LogoUrl:
                                }

    KeyCredentials            : {}
    OptionalClaims            :
    ParentalControlSettings   : class ParentalControlSettings {
                                    CountriesBlockedForMinors: System.Collections.Generic.List`1[System.String]
                                    LegalAgeGroupRule: Allow
                                }

    PasswordCredentials       : {}
    PublicClientApplication   :
    RequiredResourceAccess    : {}
    SignInAudience            : AzureADandPersonalMicrosoftAccount
    Tags                      : {}
    TokenEncryptionKeyId      :
    Web                       : class WebApplication {
                                    LogoutUrl:
                                    Oauth2AllowImplicitFlow:
                                    RedirectUris: System.Collections.Generic.List`1[System.String]
                                    ImplicitGrantSettings: class ImplicitGrantSettings {
                                        EnableIdTokenIssuance: False
                                        EnableAccessTokenIssuance: False
                                    }
                                }
  description: |-
    This command gets an application by its object ID.
  summary: ""
- title: 'Example 5: Get the first two applications'
  code: |-
    PS C:\>Get-EntraMSApplication -Top 2

    Id                        : ba4a97a7-3815-4752-bf4c-f1c0cccfff6a
    OdataType                 :
    Api                       : class ApiApplication {
                                    AcceptMappedClaims:
                                    KnownClientApplications:
                                    PreAuthorizedApplications:
                                    RequestedAccessTokenVersion: 2
                                    Oauth2PermissionScopes:
                                    System.Collections.Generic.List`1[Microsoft.Open.MSGraph.Model.PermissionScope]
                                }

    AppId                     : 807dd73f-8451-4cfa-b3bc-52ac3fd95330
    AppRoles                  : {}
    IsDeviceOnlyAuthSupported :
    IsFallbackPublicClient    :
    IdentifierUris            : {}
    DeletedDateTime           :
    DisplayName               : My App
    Info                      : class InformationalUrl {
                                    TermsOfServiceUrl:
                                    MarketingUrl:
                                    PrivacyStatementUrl:
                                    SupportUrl:
                                    LogoUrl:
                                }

    KeyCredentials            : {}
    OptionalClaims            :
    ParentalControlSettings   : class ParentalControlSettings {
                                    CountriesBlockedForMinors: System.Collections.Generic.List`1[System.String]
                                    LegalAgeGroupRule: Allow
                                }

    PasswordCredentials       : {}
    PublicClientApplication   :
    RequiredResourceAccess    : {}
    SignInAudience            : AzureADandPersonalMicrosoftAccount
    Tags                      : {}
    TokenEncryptionKeyId      :
    Web                       : class WebApplication {
                                    LogoutUrl:
                                    Oauth2AllowImplicitFlow:
                                    RedirectUris: System.Collections.Generic.List`1[System.String]
                                    ImplicitGrantSettings: class ImplicitGrantSettings {
                                        EnableIdTokenIssuance: False
                                        EnableAccessTokenIssuance: False
                                    }
                                }

    Id                        : d27bb37d-e1c0-4298-8308-ee5c239c0e3f
    OdataType                 :
    Api                       : class ApiApplication {
                                    AcceptMappedClaims:
                                    KnownClientApplications:
                                    PreAuthorizedApplications:
                                    RequestedAccessTokenVersion: 2
                                    Oauth2PermissionScopes:
                                    System.Collections.Generic.List`1[Microsoft.Open.MSGraph.Model.PermissionScope]
                                }

    AppId                     : d9d4567d-6b71-4c58-b1ac-decbeb28c3b8
    AppRoles                  : {}
    IsDeviceOnlyAuthSupported :
    IsFallbackPublicClient    :
    IdentifierUris            : {}
    DeletedDateTime           :
    DisplayName               : My App
    Info                      : class InformationalUrl {
                                    TermsOfServiceUrl:
                                    MarketingUrl:
                                    PrivacyStatementUrl:
                                    SupportUrl:
                                    LogoUrl:
                                }

    KeyCredentials            : {}
    OptionalClaims            :
    ParentalControlSettings   : class ParentalControlSettings {
                                    CountriesBlockedForMinors: System.Collections.Generic.List`1[System.String]
                                    LegalAgeGroupRule: Allow
                                }

    PasswordCredentials       : {}
    PublicClientApplication   :
    RequiredResourceAccess    : {}
    SignInAudience            : AzureADandPersonalMicrosoftAccount
    Tags                      : {}
    TokenEncryptionKeyId      :
    Web                       : class WebApplication {
                                    LogoutUrl:
                                    Oauth2AllowImplicitFlow:
                                    RedirectUris: System.Collections.Generic.List`1[System.String]
                                    ImplicitGrantSettings: class ImplicitGrantSettings {
                                        EnableIdTokenIssuance: False
                                        EnableAccessTokenIssuance: False
                                    }
                                }
  description: |-
    This command gets the first two applications.
  summary: ""
- title: 'Example 6: Retrieve a list of all applications'
  code: |-
    PS C:\>Get-EntraMSApplication -All

    Id                        : ba4a97a7-3815-4752-bf4c-f1c0cccfff6a
    OdataType                 :
    Api                       : class ApiApplication {
                                    AcceptMappedClaims:
                                    KnownClientApplications:
                                    PreAuthorizedApplications:
                                    RequestedAccessTokenVersion: 2
                                    Oauth2PermissionScopes:
                                    System.Collections.Generic.List`1[Microsoft.Open.MSGraph.Model.PermissionScope]
                                }

    AppId                     : 807dd73f-8451-4cfa-b3bc-52ac3fd95330
    AppRoles                  : {}
    IsDeviceOnlyAuthSupported :
    IsFallbackPublicClient    :
    IdentifierUris            : {}
    DeletedDateTime           :
    DisplayName               : My App
    Info                      : class InformationalUrl {
                                    TermsOfServiceUrl:
                                    MarketingUrl:
                                    PrivacyStatementUrl:
                                    SupportUrl:
                                    LogoUrl:
                                }

    KeyCredentials            : {}
    OptionalClaims            :
    ParentalControlSettings   : class ParentalControlSettings {
                                    CountriesBlockedForMinors: System.Collections.Generic.List`1[System.String]
                                    LegalAgeGroupRule: Allow
                                }

    PasswordCredentials       : {}
    PublicClientApplication   :
    RequiredResourceAccess    : {}
    SignInAudience            : AzureADandPersonalMicrosoftAccount
    Tags                      : {}
    TokenEncryptionKeyId      :
    Web                       : class WebApplication {
                                    LogoutUrl:
                                    Oauth2AllowImplicitFlow:
                                    RedirectUris: System.Collections.Generic.List`1[System.String]
                                    ImplicitGrantSettings: class ImplicitGrantSettings {
                                        EnableIdTokenIssuance: False
                                        EnableAccessTokenIssuance: False
                                    }
                                }

    Id                        : d27bb37d-e1c0-4298-8308-ee5c239c0e3f
    OdataType                 :
    Api                       : class ApiApplication {
                                    AcceptMappedClaims:
                                    KnownClientApplications:
                                    PreAuthorizedApplications:
                                    RequestedAccessTokenVersion: 2
                                    Oauth2PermissionScopes:
                                    System.Collections.Generic.List`1[Microsoft.Open.MSGraph.Model.PermissionScope]
                                }

    AppId                     : d9d4567d-6b71-4c58-b1ac-decbeb28c3b8
    AppRoles                  : {}
    IsDeviceOnlyAuthSupported :
    IsFallbackPublicClient    :
    IdentifierUris            : {}
    DeletedDateTime           :
    DisplayName               : My App
    Info                      : class InformationalUrl {
                                    TermsOfServiceUrl:
                                    MarketingUrl:
                                    PrivacyStatementUrl:
                                    SupportUrl:
                                    LogoUrl:
                                }

    KeyCredentials            : {}
    OptionalClaims            :
    ParentalControlSettings   : class ParentalControlSettings {
                                    CountriesBlockedForMinors: System.Collections.Generic.List`1[System.String]
                                    LegalAgeGroupRule: Allow
                                }

    PasswordCredentials       : {}
    PublicClientApplication   :
    RequiredResourceAccess    : {}
    SignInAudience            : AzureADandPersonalMicrosoftAccount
    Tags                      : {}
    TokenEncryptionKeyId      :
    Web                       : class WebApplication {
                                    LogoutUrl:
                                    Oauth2AllowImplicitFlow:
                                    RedirectUris: System.Collections.Generic.List`1[System.String]
                                    ImplicitGrantSettings: class ImplicitGrantSettings {
                                        EnableIdTokenIssuance: False
                                        EnableAccessTokenIssuance: False
                                    }
                                }
  description: |-
    This command gets all the applications.
  summary: ""
- title: 'Example 7: Retrieve a list of all applications, which have a display name that contains "asdfl"'
  code: |-
    PS C:\>Get-EntraMSApplication -SearchString asdfl

    Id                        : d27bb37d-e1c0-4298-8308-ee5c239c0e3f
    OdataType                 :
    Api                       : class ApiApplication {
                                    AcceptMappedClaims:
                                    KnownClientApplications:
                                    PreAuthorizedApplications:
                                    RequestedAccessTokenVersion: 2
                                    Oauth2PermissionScopes:
                                    System.Collections.Generic.List`1[Microsoft.Open.MSGraph.Model.PermissionScope]
                                }

    AppId                     : d9d4567d-6b71-4c58-b1ac-decbeb28c3b8
    AppRoles                  : {}
    IsDeviceOnlyAuthSupported :
    IsFallbackPublicClient    :
    IdentifierUris            : {}
    DeletedDateTime           :
    DisplayName               : asdflfgh
    Info                      : class InformationalUrl {
                                    TermsOfServiceUrl:
                                    MarketingUrl:
                                    PrivacyStatementUrl:
                                    SupportUrl:
                                    LogoUrl:
                                }

    KeyCredentials            : {}
    OptionalClaims            :
    ParentalControlSettings   : class ParentalControlSettings {
                                    CountriesBlockedForMinors: System.Collections.Generic.List`1[System.String]
                                    LegalAgeGroupRule: Allow
                                }

    PasswordCredentials       : {}
    PublicClientApplication   :
    RequiredResourceAccess    : {}
    SignInAudience            : AzureADandPersonalMicrosoftAccount
    Tags                      : {}
    TokenEncryptionKeyId      :
    Web                       : class WebApplication {
                                    LogoutUrl:
                                    Oauth2AllowImplicitFlow:
                                    RedirectUris: System.Collections.Generic.List`1[System.String]
                                    ImplicitGrantSettings: class ImplicitGrantSettings {
                                        EnableIdTokenIssuance: False
                                        EnableAccessTokenIssuance: False
                                    }
                                }
  description: |-
    This command gets a list of applications, which have the specified display name.
  summary: ""
parameters:
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    List all pages.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Specifies an oData v3.0 filter statement.
    This parameter controls which objects are returned.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ObjectId
  isRequired: true
  description: |+
    Specifies the ID of an application in Microsoft Entra ID.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SearchString
  description: |+
    Retrieve only those applications that satisfy the -SearchString value.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Top
  description: |+
    Specifies the maximum number of records to return.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Microsoft.Graph.Entra.Get-EntraMSApplication
name: Get-EntraMSApplication
description: |-
  Retrieves the list of applications within the organization.
  With an ObjectId argument, it can retrieve the properties of the application object associated with the ObjectId.
metadata:
  title: Get-EntraMSApplication
  description: This article provides details on the Get-EntraMSApplication command.
  ms.service: active-directory
  ms.topic: reference
  ms.date: 02/29/2024
  ms.author: eunicewaweru
  ms.reviewer: stevemutungi
  manager: CelesteDG
  external help file: Microsoft.Graph.Entra-Help.xml
  Module Name: Microsoft.Graph.Entra
  online version: ""
  PlatyPS schema version: 2.0.0
