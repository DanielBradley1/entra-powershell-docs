### YamlMime:PowershellCmdlet
summary: |-
  Adds a scoped role membership to an administrative unit.
module: Microsoft.Graph.Entra.Beta
notes: ""
links:
- text: Get-EntraBetaMSScopedRoleMembership
  href: Get-EntraBetaMSScopedRoleMembership.yml
- text: Remove-EntraBetaMSScopedRoleMembership
  href: Remove-EntraBetaMSScopedRoleMembership.yml
syntaxes:
- >-
  Add-EntraBetaMSScopedRoleMembership 
      -Id <String>
      [-RoleMemberInfo <MsRoleMemberInfo>] 
      [-AdministrativeUnitId <String>] 
      [-RoleId <String>] 
   [<CommonParameters>]
examples:
- title: 'Example 1: Adds a scoped role membership to an administrative unit.'
  code: |-
    PS C:\> $User = Get-EntraBetaUser -SearchString "The user that will be an admin on this unit"
    PS C:\> $Role = Get-EntraBetaDirectoryRole | Where-Object -Property DisplayName -Eq -Value "User Account Administrator"
    PS C:\> $Unit = Get-EntraBetaMSAdministrativeUnit | Where-Object -Property DisplayName -Eq -Value "The display name of the unit"
    PS C:\> $RoleMember = New-Object -TypeName Microsoft.Open.MSGraph.Model.MsRolememberinfo.RoleMemberInfo
    PS C:\> $RoleMember.Id = $User.ObjectID
    PS C:\> Add-EntraBetaMSScopedRoleMembership -Id $Unit.Id -RoleId $Role.ObjectId -RoleMemberInfo $RoleMember

    AdministrativeUnitId					RoleId 	
    --------------------------           	------------ 	
    c9ab56cc-e349-4237-856e-cab03157a91e 	526b7173-5a6e-49dc-88ec-b677a9093709
  description: |-
    The first command gets a user by using the [Get-EntraBetaUser](./Get-EntraBetaUser.yml) cmdlet, and then stores it in the $User variable.  

    The second command gets a directory role by using [Get-EntraBetaDirectoryRole](./Get-EntraBetaDirectoryRole.yml) cmdlet, and then stores it in the $Role variable.  

    The third command gets an administrative unit by using [Get-EntraBetaMSAdministrativeUnit](./Get-EntraBetaMSAdministrativeUnit.yml) cmdlet, and then stores it in the $Unit variable.  

    The fourth command creates a RoleMemberInfo type, and then stores it in the $RoleMember variable.  

    The fifth command set the Id property of $RoleMember to the same value as the ObjectId property of $User.  

    The final command assigns the role member in $RoleMember and role in $Role to the administrative unit in $Unit.  

    This cmdlet returns the Scoped role membership object.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AdministrativeUnitId
  description: |+
    Specifies the ID of an administrative unit.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  isRequired: true
  description: |+
    Specifies the ID of an administrative unit.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: RoleId
  description: |+
    Specifies the ID of a directory role.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="MsRoleMemberInfo" data-throw-if-not-resolved="False" />
  name: RoleMemberInfo
  description: |+
    Specifies a RoleMemberInfo object.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Microsoft.Graph.Entra.Beta.Add-EntraBetaMSScopedRoleMembership
name: Add-EntraBetaMSScopedRoleMembership
description: |-
  The **Add-EntraBetaMSScopedRoleMembership** cmdlet adds a scoped role membership to an administrative unit.
metadata:
  title: Add-EntraBetaMSScopedRoleMembership
  description: This article provides details on the Add-EntraBetaMSScopedRoleMembership command.
  ms.service: active-directory
  ms.topic: reference
  ms.date: 03/04/2024
  ms.author: eunicewaweru
  ms.reviewer: stevemutungi
  manager: CelesteDG
  external help file: Microsoft.Graph.Entra.Beta-Help.xml
  Module Name: Microsoft.Graph.Entra.Beta
  online version: ""
  PlatyPS schema version: 2.0.0
